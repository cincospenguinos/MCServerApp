require 'rake'
require 'fileutils'
require 'yaml'

task :setup do
  FileUtils.makedirs('config') unless File.directory?('config')
  config_flag = false

  Dir.chdir('config') do

    # Setup db_config
    unless File.exist?('db_config.yml')
      db_config = {
          production: {
              db_schema_name: '',
              db_username: '',
              db_password: '',
              db_hostname: '',
              db_engine: ''
          },
          development: {
              db_schema_name: '',
              db_username: '',
              db_password: '',
              db_hostname: '',
              db_engine: ''
          },
          test: {
              db_schema_name: '',
              db_username: '',
              db_password: '',
              db_hostname: '',
              db_engine: ''
          }
      }.to_yaml
      File.open('db_config.yml', 'w') {|f| f.write(db_config) }
      puts 'Please modify the db_config.yml file'
      config_flag = true
    end

    # Setup the startup script config
    unless File.exist?('startup_script_config.yml')
      startup_config = {
          full_file_path: '',
          status: 'status',
          start: 'start',
          stop: 'stop'
      }.to_yaml
      File.open('startup_script_config.yml', 'w') { |f| f.write(startup_config)}
      puts 'Please modify the startup_script_config.yml file'
      config_flag = true
    end

    unless File.exist?('email_config.yml')
      email_config = {
          email_address: '',
          password: '',
          admin_email_address: ''
      }.to_yaml
      File.open('email_config.yml', 'w') { |f| f.write(email_config) }
      puts 'Please modify email_config.yml'
      config_flag = true
    end
  end

  exit 1 if config_flag

  `sudo gem install bundler && bundler install`

  # Make sure we get the proper DB Engine
  db_config = YAML.load_file('config/db_config.yml')[:production]
  `gem install dm-#{db_config[:db_engine]}-adapter`

  # Let's build all the various gems and install them
  Dir.chdir('mc_emailer') do
    `gem build mc_emailer.gemspec`
    `sudo gem install mc_emailer-0.0.1.gem && rm mc_emailer-0.0.1.gem`
  end

  Dir.chdir('mc_startup_models') do
    `gem build mc_startup_models.gemspec`
    `sudo gem install mc_startup_models-0.0.1.gem && mc_startup_models-0.0.1.gem`
  end

  # Put the config files in the webapp space
  `cp -R config webapp/`

  # Make a copy of config locally as well
  `cp -R config ~/`

  # Put everything in backend_scripts into ~/bin
  `cp -R backend_scripts `

  # Move the startup script over to services
  `sudo mv ~/bin/minecraft /etc/init.d/`

  # TODO: Now deploy the web app where it needs to go
end

task :default => [:setup]