 #!/usr/bin/env bash
 # /etc/init.d/minecraft
 # Andre's version 2017-01-28
 #
 ### BEGIN INIT INFO
 # Provides:   minecraft
 # Required-Start: $local_fs $remote_fs screen-cleanup
 # Required-Stop:  $local_fs $remote_fs
 # Should-Start:   $network
 # Should-Stop:    $network
 # Default-Start:  2 3 4 5
 # Default-Stop:   0 1 6
 # Short-Description:    Minecraft server
 # Description:    Starts the minecraft server
 ### END INIT INFO
 
 #Settings
 SERVICE='minecraft_server.jar'
 OPTIONS='nogui'
 USERNAME='minecraft'
 WORLD='apocrypha'
 MCPATH='/home/minecraft/server'
 BACKUPPATH="$MCPATH/backups"
 MAXHEAP=1024
 MINHEAP=512
 HISTORY=256
 CPU_COUNT=1
 INVOCATION="java -Xmx${MAXHEAP}M -Xms${MINHEAP}M -XX:+UseConcMarkSweepGC \
 -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts \
 -jar $SERVICE $OPTIONS" 

 mc_start() {
   if  pgrep -u $USERNAME -f $SERVICE > /dev/null
   then
     echo "$SERVICE is already running!"
   else
     echo "Starting $SERVICE..."
     cd $MCPATH
     sudo -u $USERNAME screen -h $HISTORY -dmS minecraft $INVOCATION
     sleep 7
     if pgrep -u $USERNAME -f $SERVICE > /dev/null
     then
       echo "$SERVICE is now running."
     else
       echo "Error! Could not start $SERVICE!"
     fi
   fi
 }
 
 mc_stop() {
   if pgrep -u $USERNAME -f $SERVICE > /dev/null
   then
     echo "Stopping $SERVICE"
     sudo -u $USERNAME screen -p 0 -S minecraft -X eval 'stuff "say SERVER SHUTTING DOWN IN 10 SECONDS. Saving map..."\015'
     sudo -u $USERNAME screen -p 0 -S minecraft -X eval 'stuff "save-all"\015'
     sleep 10
     sudo -u $USERNAME screen -p 0 -S minecraft -X eval 'stuff "stop"\015'
     sleep 7
   else
     echo "$SERVICE was not running."
   fi
   if pgrep -u $USERNAME -f $SERVICE > /dev/null
   then
     echo "Error! $SERVICE could not be stopped."
   else
     echo "$SERVICE is stopped."
   fi
 } 
 
 mc_backup() {
    NOW=`date "+%Y-%m-%d_%Hh%M"`
    BACKUP_FILE="$BACKUPPATH/${WORLD}_${NOW}.tar"
    echo "Backing up minecraft world..."
    sudo -u $USERNAME tar -C \"$MCPATH\" -cf \"$BACKUP_FILE\" $WORLD
 
    echo "Compressing backup..."
    sudo -u $USERNAME gzip -f \"$BACKUP_FILE\"
    echo "Done."
 }


 mc_list() {
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
	sudo -u $USERNAME screen -p 0 -S minecraft -X eval 'stuff "list"\015'
	sleep .1
	echo `tail -n 2 $MCPATH/logs/latest.log`
    fi
 }

 mc_command() {
   command="$1";
   if pgrep -u $USERNAME -f $SERVICE > /dev/null
   then
     pre_log_len=`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`
     echo "$SERVICE is running... executing command"
     sudo -u $USERNAME screen -p 0 -S minecraft -X eval 'stuff \"$command\"\015'
     sleep .1 # assumes that the command will run and print to the log file in less than .1 seconds
     # print output
     tail -n $[`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`-$pre_log_len] "$MCPATH/logs/latest.log"
   fi
 }
 
 #Start-Stop here
 case "$1" in
   start)
     #verify_user
     #su minecraft
     mc_start
     ;;
   stop)
     #verify_user
     mc_stop
     ;;
   restart)
     #verify_user
     mc_stop
     mc_start
     ;;
   backup)
     if pgrep -u $USERNAME -f $SERVICE > /dev/null
     then
       echo 'Cannot backup unless service is off'
     else
       mc_backup
     fi
     ;;
   list)
     if pgrep -u $USERNAME -f $SERVICE > /dev/null
     then
       mc_list
     else
       echo "$SERVICE is not running."
     fi
     ;;
   status)
     if pgrep -u $USERNAME -f $SERVICE > /dev/null
     then
       echo "$SERVICE is running."
     else
       echo "$SERVICE is not running."
     fi
     ;;
   command)
     verify_user
     if [ $# -gt 1 ]; then
       shift
       mc_command "$*"
     else
       echo "Must specify server command (try 'help'?)"
     fi
     ;;
   *)
   echo "Usage: $0 {start|stop|update|backup|status|restart|command \"server command\"}"
   exit 1
   ;;
 esac
 
 exit 0
</pre>
<noinclude>[[Category:Data pages]]</noinclude>